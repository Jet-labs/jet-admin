"use strict";(self.webpackChunkjetadmin_frontend=self.webpackChunkjetadmin_frontend||[]).push([[5351],{35113:(E,R,e)=>{e.d(R,{OS:()=>O,OF:()=>L,m9:()=>o,Q2:()=>s,Fd:()=>C,co:()=>n,UM:()=>i,G4:()=>S});var T,A,N=e(88739),t=e(83359);class I{constructor(E){let{pm_query_id:R,pm_query:e,pm_query_type:T,pm_query_title:A,pm_query_description:N,is_disabled:I,created_at:r,updated_at:O,disabled_at:S,disable_reason:C}=E;this.getQueryClass=E=>{let{pm_query_type:R,queryData:e}=E;return console.log({pm_query_type:R,queryData:e}),e?(t.R[R].value,new a(e)):null},this.getTitle=()=>this.pm_query_title,this.getDescription=()=>this.pm_query_description,this.pm_query_id=parseInt(R),this.pm_query_type=T,this.pm_query_title=String(A),this.pm_query_description=String(N),this.pm_query=this.getQueryClass({pm_query_type:T,queryData:e}),this.is_disabled=I,this.created_at=r,this.updated_at=O,this.disabled_at=S,this.disable_reason=C}}T=I,I.toList=E=>{if(Array.isArray(E))return E.map((E=>new T(E)))};class a{constructor(E){let{raw_query:R}=E;this.raw_query=String(R)}}A=a,a.toList=E=>{if(Array.isArray(E))return E.map((E=>new A(E)))};var r=e(33211);const O=async E=>{let{data:R}=E;try{const E=await r.A.post(N.a.APIS.QUERY.addQuery(),R);if(E.data&&1==E.data.success)return!0;throw E.data.error?E.data.error:N.a.ERROR_CODES.SERVER_ERROR}catch(e){throw e}},S=async E=>{let{data:R}=E;try{const E=await r.A.put(N.a.APIS.QUERY.updateQuery(),R);if(E.data&&1==E.data.success)return!0;throw E.data&&E.data.error?E.data.error:N.a.ERROR_CODES.SERVER_ERROR}catch(e){throw console.log({error:e}),e}},C=async E=>{let{pmQueryID:R}=E;try{const E=await r.A.get(N.a.APIS.QUERY.getQueryByID({id:R}));if(E.data&&1==E.data.success)return console.log(E.data.query),new I(E.data.query);throw E.data.error?E.data.error:N.a.ERROR_CODES.SERVER_ERROR}catch(e){throw e}},L=async E=>{let{pmQueryID:R}=E;try{const E=await r.A.delete(N.a.APIS.QUERY.deleteQueryByID({id:R}));if(E.data&&1==E.data.success)return!0;throw E.data.error?E.data.error:N.a.ERROR_CODES.SERVER_ERROR}catch(e){throw e}},s=async()=>{try{const E=await r.A.get(N.a.APIS.QUERY.getAllQueries());if(E.data&&1==E.data.success)return I.toList(E.data.queries);throw E.data.error?E.data.error:N.a.ERROR_CODES.SERVER_ERROR}catch(E){throw E}},n=async E=>{let{pm_query_type:R,pm_query:e}=E;try{const E=await r.A.post(N.a.APIS.QUERY.runQuery(),{pm_query_type:R,pm_query:e});if(E.data&&1==E.data.success)return E.data.data;throw E.data.error?(console.log(E.data.error),E.data.error):N.a.ERROR_CODES.SERVER_ERROR}catch(T){throw T}},i=async E=>{let{pm_query_id:R}=E;try{const E=await r.A.get(N.a.APIS.QUERY.runQueryByID({id:R}));if(E.data&&1==E.data.success)return E.data.data;throw E.data.error?(console.log(E.data.error),E.data.error):N.a.ERROR_CODES.SERVER_ERROR}catch(e){throw e}},o=async E=>{let{pmQueryID:R}=E;try{const E=await r.A.post(N.a.APIS.QUERY.duplicateQuery(),{pm_query_id:R});if(E.data&&1==E.data.success)return!0;throw E.data.error?E.data.error:N.a.ERROR_CODES.SERVER_ERROR}catch(e){throw e}}},51473:(E,R,e)=>{e.d(R,{O:()=>C});var T=e(26240),A=e(96446),N=e(65043),t=e(79314),I=e.n(t),a=e(83668),r=(e(68685),e(87895)),O=e(31628),S=e(70579);const C=E=>{let{data:R,border:e=!0,className:t,height:C="100%",width:L="100%"}=E;const s=(0,T.A)(),{themeType:n}=(0,r.i7)(),i=R?I()(Array.isArray(R)?R[0]:R):{},o=(0,N.useMemo)((()=>{if(i&&i.properties)return Object.keys(i.properties).map((E=>({key:E,name:(0,O.ZH)(E)})))}),[i]);return(0,S.jsx)(A.A,{sx:{width:L,height:C},className:"!flex !flex-col !justify-start !items-stretch ".concat(t),children:R&&Array.isArray(R)&&R.length?(0,S.jsx)(a.Ay,{rows:R.map(((E,R)=>({_g_uuid:"_index_".concat(R),...E}))),columns:o,className:"!w-100 !rounded ".concat("dark"===n?"":"rdg-light "),style:{borderColor:s.palette.divider,borderWidth:e?1:0},rowKeyGetter:E=>E._g_uuid,defaultColumnOptions:{sortable:!1,resizable:!0}}):(0,S.jsx)("div",{className:"!h-32 flex !flex-col !justify-center !items-center w-100 ",style:{width:"100%",borderWidth:1,borderColor:s.palette.divider,borderRadius:4},children:(0,S.jsx)("span",{children:"No data"})})})}},83359:(E,R,e)=>{e.d(R,{R:()=>G});var T=e(26240),A=e(67254),N=e(42518),t=e(59395),I=e(24056),a=e(39336),r=e(47097),O=e(65043),S=(e(68685),e(35113)),C=e(76639),L=e(77158),s=e(16082),n=e(87895);const i=["A","ABORT","ABS","ABSENT","ABSOLUTE","ACCESS","ACCORDING","ACOS","ACTION","ADA","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALLOCATE","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","ANY_VALUE","ARE","ARRAY","ARRAY_AGG","ARRAY_\u200bMAX_\u200bCARDINALITY","AS","ASC","ASENSITIVE","ASIN","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATAN","ATOMIC","ATTACH","ATTRIBUTE","ATTRIBUTES","AUTHORIZATION","AVG","BACKWARD","BASE64","BEFORE","BEGIN","BEGIN_FRAME","BEGIN_PARTITION","BERNOULLI","BETWEEN","BIGINT","BINARY","BIT","BIT_LENGTH","BLOB","BLOCKED","BOM","BOOLEAN","BOTH","BREADTH","BTRIM","BY","C","CACHE","CALL","CALLED","CARDINALITY","CASCADE","CASCADED","CASE","CAST","CATALOG","CATALOG_NAME","CEIL","CEILING","CHAIN","CHAINING","CHAR","CHARACTER","CHARACTERISTICS","CHARACTERS","CHARACTER_LENGTH","CHARACTER_\u200bSET_\u200bCATALOG","CHARACTER_SET_NAME","CHARACTER_SET_SCHEMA","CHAR_LENGTH","CHECK","CHECKPOINT","CLASS","CLASSIFIER","CLASS_ORIGIN","CLOB","CLOSE","CLUSTER","COALESCE","COBOL","COLLATE","COLLATION","COLLATION_CATALOG","COLLATION_NAME","COLLATION_SCHEMA","COLLECT","COLUMN","COLUMNS","COLUMN_NAME","COMMAND_FUNCTION","COMMAND_\u200bFUNCTION_\u200bCODE","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONDITION","CONDITIONAL","CONDITION_NUMBER","CONFIGURATION","CONFLICT","CONNECT","CONNECTION","CONNECTION_NAME","CONSTRAINT","CONSTRAINTS","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONSTRUCTOR","CONTAINS","CONTENT","CONTINUE","CONTROL","CONVERSION","CONVERT","COPARTITION","COPY","CORR","CORRESPONDING","COS","COSH","COST","COUNT","COVAR_POP","COVAR_SAMP","CREATE","CROSS","CSV","CUBE","CUME_DIST","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_\u200bDEFAULT_\u200bTRANSFORM_\u200bGROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_ROW","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_\u200bTRANSFORM_\u200bGROUP_\u200bFOR_\u200bTYPE","CURRENT_USER","CURSOR","CURSOR_NAME","CYCLE","DATA","DATABASE","DATALINK","DATE","DATETIME_\u200bINTERVAL_\u200bCODE","DATETIME_\u200bINTERVAL_\u200bPRECISION","DAY","DB","DEALLOCATE","DEC","DECFLOAT","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINE","DEFINED","DEFINER","DEGREE","DELETE","DELIMITER","DELIMITERS","DENSE_RANK","DEPENDS","DEPTH","DEREF","DERIVED","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DICTIONARY","DISABLE","DISCARD","DISCONNECT","DISPATCH","DISTINCT","DLNEWCOPY","DLPREVIOUSCOPY","DLURLCOMPLETE","DLURLCOMPLETEONLY","DLURLCOMPLETEWRITE","DLURLPATH","DLURLPATHONLY","DLURLPATHWRITE","DLURLSCHEME","DLURLSERVER","DLVALUE","DO","DOCUMENT","DOMAIN","DOUBLE","DROP","DYNAMIC","DYNAMIC_FUNCTION","DYNAMIC_\u200bFUNCTION_\u200bCODE","EACH","ELEMENT","ELSE","EMPTY","ENABLE","ENCODING","ENCRYPTED","END","END-EXEC","END_FRAME","END_PARTITION","ENFORCED","ENUM","EQUALS","ERROR","ESCAPE","EVENT","EVERY","EXCEPT","EXCEPTION","EXCLUDE","EXCLUDING","EXCLUSIVE","EXEC","EXECUTE","EXISTS","EXP","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILE","FILTER","FINAL","FINALIZE","FINISH","FIRST","FIRST_VALUE","FLAG","FLOAT","FLOOR","FOLLOWING","FOR","FORCE","FOREIGN","FORMAT","FORTRAN","FORWARD","FOUND","FRAME_ROW","FREE","FREEZE","FROM","FS","FULFILL","FULL","FUNCTION","FUNCTIONS","FUSION","G","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HEX","HIERARCHY","HOLD","HOUR","ID","IDENTITY","IF","IGNORE","ILIKE","IMMEDIATE","IMMEDIATELY","IMMUTABLE","IMPLEMENTATION","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDENT","INDEX","INDEXES","INDICATOR","INHERIT","INHERITS","INITIAL","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTANCE","INSTANTIABLE","INSTEAD","INT","INTEGER","INTEGRITY","INTERSECT","INTERSECTION","INTERVAL","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_SCALAR","JSON_SERIALIZE","JSON_TABLE","JSON_TABLE_PRIMITIVE","JSON_VALUE","K","KEEP","KEY","KEYS","KEY_MEMBER","KEY_TYPE","LABEL","LAG","LANGUAGE","LARGE","LAST","LAST_VALUE","LATERAL","LEAD","LEADING","LEAKPROOF","LEAST","LEFT","LENGTH","LEVEL","LIBRARY","LIKE","LIKE_REGEX","LIMIT","LINK","LISTAGG","LISTEN","LN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKED","LOG","LOG10","LOGGED","LOWER","LPAD","LTRIM","M","MAP","MAPPING","MATCH","MATCHED","MATCHES","MATCH_NUMBER","MATCH_RECOGNIZE","MATERIALIZED","MAX","MAXVALUE","MEASURES","MEMBER","MERGE","MESSAGE_LENGTH","MESSAGE_OCTET_LENGTH","MESSAGE_TEXT","METHOD","MIN","MINUTE","MINVALUE","MOD","MODE","MODIFIES","MODULE","MONTH","MORE","MOVE","MULTISET","MUMPS","NAME","NAMES","NAMESPACE","NATIONAL","NATURAL","NCHAR","NCLOB","NESTED","NESTING","NEW","NEXT","NFC","NFD","NFKC","NFKD","NIL","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NTH_VALUE","NTILE","NULL","NULLABLE","NULLIF","NULLS","NULL_ORDERING","NUMBER","NUMERIC","OBJECT","OCCURRENCE","OCCURRENCES_REGEX","OCTETS","OCTET_LENGTH","OF","OFF","OFFSET","OIDS","OLD","OMIT","ON","ONE","ONLY","OPEN","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDERING","ORDINALITY","OTHERS","OUT","OUTER","OUTPUT","OVER","OVERFLOW","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","P","PAD","PARALLEL","PARAMETER","PARAMETER_MODE","PARAMETER_NAME","PARAMETER_\u200bORDINAL_\u200bPOSITION","PARAMETER_\u200bSPECIFIC_\u200bCATALOG","PARAMETER_\u200bSPECIFIC_\u200bNAME","PARAMETER_\u200bSPECIFIC_\u200bSCHEMA","PARSER","PARTIAL","PARTITION","PASCAL","PASS","PASSING","PASSTHROUGH","PASSWORD","PAST","PATH","PATTERN","PER","PERCENT","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","PERIOD","PERMISSION","PERMUTE","PIPE","PLACING","PLAN","PLANS","PLI","POLICY","PORTION","POSITION","POSITION_REGEX","POWER","PRECEDES","PRECEDING","PRECISION","PREPARE","PREPARED","PRESERVE","PREV","PRIMARY","PRIOR","PRIVATE","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PRUNE","PTF","PUBLIC","PUBLICATION","QUOTE","QUOTES","RANGE","RANK","READ","READS","REAL","REASSIGN","RECHECK","RECOVERY","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REINDEX","RELATIVE","RELEASE","RENAME","REPEATABLE","REPLACE","REPLICA","REQUIRING","RESET","RESPECT","RESTART","RESTORE","RESTRICT","RESULT","RETURN","RETURNED_CARDINALITY","RETURNED_LENGTH","RETURNED_\u200bOCTET_\u200bLENGTH","RETURNED_SQLSTATE","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROUTINE_CATALOG","ROUTINE_NAME","ROUTINE_SCHEMA","ROW","ROWS","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","RULE","RUNNING","SAVEPOINT","SCALAR","SCALE","SCHEMA","SCHEMAS","SCHEMA_NAME","SCOPE","SCOPE_CATALOG","SCOPE_NAME","SCOPE_SCHEMA","SCROLL","SEARCH","SECOND","SECTION","SECURITY","SEEK","SELECT","SELECTIVE","SELF","SEMANTICS","SENSITIVE","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SERVER_NAME","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SIN","SINH","SIZE","SKIP","SMALLINT","SNAPSHOT","SOME","SORT_DIRECTION","SOURCE","SPACE","SPECIFIC","SPECIFICTYPE","SPECIFIC_NAME","SQL","SQLCODE","SQLERROR","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQRT","STABLE","STANDALONE","START","STATE","STATEMENT","STATIC","STATISTICS","STDDEV_POP","STDDEV_SAMP","STDIN","STDOUT","STORAGE","STORED","STRICT","STRING","STRIP","STRUCTURE","STYLE","SUBCLASS_ORIGIN","SUBMULTISET","SUBSCRIPTION","SUBSET","SUBSTRING","SUBSTRING_REGEX","SUCCEEDS","SUM","SUPPORT","SYMMETRIC","SYSID","SYSTEM","SYSTEM_TIME","SYSTEM_USER","T","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TABLE_NAME","TAN","TANH","TEMP","TEMPLATE","TEMPORARY","TEXT","THEN","THROUGH","TIES","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TOKEN","TOP_LEVEL_COUNT","TRAILING","TRANSACTION","TRANSACTIONS_\u200bCOMMITTED","TRANSACTIONS_\u200bROLLED_\u200bBACK","TRANSACTION_ACTIVE","TRANSFORM","TRANSFORMS","TRANSLATE","TRANSLATE_REGEX","TRANSLATION","TREAT","TRIGGER","TRIGGER_CATALOG","TRIGGER_NAME","TRIGGER_SCHEMA","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRUSTED","TYPE","TYPES","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNDER","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLINK","UNLISTEN","UNLOGGED","UNMATCHED","UNNAMED","UNNEST","UNTIL","UNTYPED","UPDATE","UPPER","URI","USAGE","USER","USER_\u200bDEFINED_\u200bTYPE_\u200bCATALOG","USER_\u200bDEFINED_\u200bTYPE_\u200bCODE","USER_\u200bDEFINED_\u200bTYPE_\u200bNAME","USER_\u200bDEFINED_\u200bTYPE_\u200bSCHEMA","USING","UTF16","UTF32","UTF8","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VALUE_OF","VARBINARY","VARCHAR","VARIADIC","VARYING","VAR_POP","VAR_SAMP","VERBOSE","VERSION","VERSIONING","VIEW","VIEWS","VOLATILE","WHEN","WHENEVER","WHERE","WHITESPACE","WIDTH_BUCKET","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XML","XMLAGG","XMLATTRIBUTES","XMLBINARY","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDECLARATION","XMLDOCUMENT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLITERATE","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSCHEMA","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","YEAR","YES","ZONE"];var o=e(70579);const d=E=>{let{value:R,handleChange:e}=E;const{dbModel:A}=(0,s.O0)(),{themeType:N}=(0,n.i7)(),t=(0,T.A)();return(0,o.jsx)("div",{className:"!mt-3",style:{borderRadius:4,borderColor:t.palette.divider,borderWidth:1},children:(0,o.jsx)(L.Ay,{height:"200px",defaultLanguage:"pgsql",theme:"dark"===N?"vs-dark":"vs-light",beforeMount:E=>{E.languages.registerCompletionItemProvider("pgsql",{provideCompletionItems:(R,e)=>{const T=R.getWordUntilPosition(e),N={startLineNumber:e.lineNumber,endLineNumber:e.lineNumber,startColumn:T.startColumn,endColumn:T.endColumn},t=null===A||void 0===A?void 0:A.map((R=>({label:R.name,kind:E.languages.CompletionItemKind.Variable,documentation:"Table ".concat(R.name),insertText:R.name,range:N}))),I=null===A||void 0===A?void 0:A.flatMap((R=>R.fields.map((e=>({label:"".concat(R.name,".").concat(e.name),kind:E.languages.CompletionItemKind["object"===e.kind?"Class":"Property"],documentation:"Field in model ".concat(R.name),insertText:"".concat(R.name,".").concat(e.name),range:N})))));return{suggestions:[...i.map((R=>({label:R,kind:E.languages.CompletionItemKind.Keyword,insertText:R,range:N}))),...t,...I]}}}),E.languages.registerHoverProvider("pgsql",{provideHover:function(R,e){const T=R.getWordAtPosition(e);if(T){const R=null===A||void 0===A?void 0:A.find((E=>E.name===T.word));null===A||void 0===A||A.flatMap((E=>E.fields.filter((E=>E.name===T.word))))[0];let t=null;if(R){var N;const E=null===R||void 0===R||null===(N=R.fields)||void 0===N?void 0:N.map((E=>({value:"".concat(E.name,": ").concat(E.type)})));t={contents:[{value:"**Table**: ".concat(R.name)},{value:"**Fields**"},...E]}}if(t)return{range:new E.Range(e.lineNumber,T.startColumn,e.lineNumber,T.endColumn),contents:t.contents}}return null}})},onChange:E=>{e({raw_query:E})},value:R?R.raw_query:"",options:{automaticLayout:!0,minimap:{enabled:!1}}})})};var l=e(87108),_=e(57946),M=e(19267),D=e(51473);const U=E=>{let{data:R}=E;return(0,o.jsx)(D.O,{data:R})};var u=e(61892);const P=E=>{let{pmQueryID:R,value:e,handleChange:L}=E;const s=(0,T.A)(),[n,i]=O.useState(0),{isPending:D,isSuccess:P,isError:c,error:m,mutate:y,data:p}=(0,r.n)({mutationFn:E=>{let{raw_query:R,pm_query_id:e}=E;return(0,S.co)({pm_query_type:G.POSTGRE_QUERY.value,pm_query:{raw_query:R,pm_query_id:e}})},retry:!1,onSuccess:E=>{(0,C.qq)("Query executed successfully")},onError:E=>{(0,C.jx)(E)}});return(0,o.jsxs)(u.HK,{direction:"vertical",autoSaveId:"pg-query-builder-form-panel-sizes",className:"!flex flex-col justify-start items-stretch w-100",children:[(0,o.jsx)(u.wV,{defaultSize:40,className:"px-3",children:(0,o.jsxs)("div",{className:"w-100 ",children:[(0,o.jsx)(d,{value:e,handleChange:L}),(0,o.jsx)(A.A,{sx:{background:s.palette.background.info,color:s.palette.info.main,"& .MuiAlert-message":{marginTop:.2}},severity:"info",className:"!py-0 !mt-3 !text-xs",children:"Query objects are intended to allow only data manupulation and data fetching queries"}),(0,o.jsxs)("div",{className:"!flex flex-row justify-between items-center w-100 mt-3",children:[p&&Array.isArray(p)?(0,o.jsx)("span",{children:"Result : ".concat(p.length)}):(0,o.jsx)("span",{}),(0,o.jsx)("div",{className:"!flex flex-row justify-start items-center",children:(0,o.jsx)(N.A,{variant:"outlined",className:"!ml-3",onClick:()=>{y({raw_query:null===e||void 0===e?void 0:e.raw_query,pm_query_id:R})},children:"Test query"})})]})]})}),(0,o.jsx)(u.WM,{withHandle:!0}),(0,o.jsxs)(u.wV,{defaultSize:60,style:{borderTopWidth:1,borderColor:s.palette.divider},className:"px-3",children:[(0,o.jsxs)(t.A,{value:n,onChange:(E,R)=>{i(R)},style:{background:s.palette.background.paper,marginTop:20},children:[(0,o.jsx)(I.A,{label:"Table"}),(0,o.jsx)(I.A,{label:"JSON"}),(0,o.jsx)(I.A,{label:"Raw"}),(0,o.jsx)(I.A,{label:"Data Schema"})]}),(0,o.jsx)(a.A,{style:{width:"100%"}}),(0,o.jsxs)("div",{className:"py-3 w-100 flex-grow h-full",children:[0===n&&(0,o.jsx)(U,{data:p||""}),1===n&&(0,o.jsx)(l.a,{data:p||""}),2===n&&(0,o.jsx)(_.O,{data:p||""}),3===n&&(0,o.jsx)(M.J,{data:p})]})]})]})};var c=e(81355);const G={POSTGRE_QUERY:{name:"Postgre query",value:"POSTGRE_QUERY",component:E=>{let{pmQueryID:R,value:e,handleChange:T}=E;return(0,o.jsx)(P,{pmQueryID:R,value:e,handleChange:T})},icon:(0,o.jsx)(c.$Wy,{className:"!text-lg"}),iconLarge:(0,o.jsx)(c.$Wy,{className:"!text-4xl"})}}},87108:(E,R,e)=>{e.d(R,{a:()=>O});var T=e(26240),A=e(25196),N=e(15346),t=e(81747),I=e(72890),a=(e(65043),e(68685),e(87895)),r=e(70579);const O=E=>{let{data:R}=E;const e=(0,T.A)(),{themeType:O}=(0,a.i7)();return(0,r.jsx)(I.Ay,{value:JSON.stringify(R,null,2),height:"400px",extensions:[(0,A.rI)("json")],theme:"dark"==O?t.Ts:N.al,style:{width:"100%",borderWidth:1,borderColor:e.palette.divider,borderRadius:4},className:"codemirror-editor-rounded"})}},57946:(E,R,e)=>{e.d(R,{O:()=>r});var T=e(26240),A=e(15346),N=e(81747),t=e(72890),I=(e(65043),e(68685),e(87895)),a=e(70579);const r=E=>{let{data:R}=E;const e=(0,T.A)(),{themeType:r}=(0,I.i7)();return(0,a.jsx)(t.Ay,{value:JSON.stringify(R,null,2),height:"400px",theme:"dark"==r?N.Ts:A.al,style:{width:"100%",borderWidth:1,borderColor:e.palette.divider,borderRadius:4},className:"codemirror-editor-rounded"})}},19267:(E,R,e)=>{e.d(R,{J:()=>C});var T=e(26240),A=e(25196),N=e(15346),t=e(81747),I=e(72890),a=(e(65043),e(68685),e(79314)),r=e.n(a),O=e(87895),S=e(70579);const C=E=>{let{data:R}=E;const e=(0,T.A)(),{themeType:a}=(0,O.i7)(),C=r()(R||{});return(0,S.jsx)(I.Ay,{value:JSON.stringify(C,null,2),height:"400px",theme:"dark"==a?t.Ts:N.al,extensions:[(0,A.rI)("json")],style:{width:"100%",borderWidth:1,borderColor:e.palette.divider,borderRadius:4},className:"codemirror-editor-rounded"})}}}]);
//# sourceMappingURL=5351.67028d10.chunk.js.map