"use strict";(self.webpackChunkjet_docs=self.webpackChunkjet_docs||[]).push([[3630],{3633:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var i=r(4848),s=r(8453);const t={},l="Backend Architecture",a={id:"concepts/backend-architecture",title:"Backend Architecture",description:"Overview",source:"@site/docs/concepts/backend-architecture.mdx",sourceDirName:"concepts",slug:"/concepts/backend-architecture",permalink:"/jet-admin-docs/docs/concepts/backend-architecture",draft:!1,unlisted:!1,editUrl:"https://github.com/jet-labs/jet-admin-docs/tree/main/docs/concepts/backend-architecture.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Frontend Architecture",permalink:"/jet-admin-docs/docs/concepts/frontend-architecture"},next:{title:"Queries",permalink:"/jet-admin-docs/docs/query"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:2},{value:"Core Architecture Components",id:"core-architecture-components",level:2},{value:"Application Entry Point",id:"application-entry-point",level:3},{value:"Configuration Layer",id:"configuration-layer",level:3},{value:"Middleware Layer",id:"middleware-layer",level:3},{value:"Module Layer",id:"module-layer",level:3},{value:"Data Access Layer",id:"data-access-layer",level:3},{value:"Utility Layer",id:"utility-layer",level:3},{value:"Scripts",id:"scripts",level:3},{value:"Authentication Flow",id:"authentication-flow",level:2},{value:"Request Processing Pipeline",id:"request-processing-pipeline",level:2},{value:"Multi-tenancy Architecture",id:"multi-tenancy-architecture",level:2},{value:"Error Handling Strategy",id:"error-handling-strategy",level:2},{value:"Logging Architecture",id:"logging-architecture",level:2},{value:"Security Architecture",id:"security-architecture",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"backend-architecture",children:"Backend Architecture"}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The backend is a modular Node.js application built with Express, Prisma ORM, and Firebase authentication. It follows a layered architecture pattern designed for scalability, maintainability, and multi-tenant support."}),"\n",(0,i.jsx)(n.h2,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR  \r\n    %% Define styles for different node types\r\n    classDef entryNode fill:#4CAF50,color:white,stroke:#2E7D32,stroke-width:2px,rounded\r\n    classDef configNode fill:#2196F3,color:white,stroke:#0D47A1,stroke-width:2px,rounded\r\n    classDef featureNode fill:#FF9800,color:black,stroke:#E65100,stroke-width:2px,rounded\r\n    classDef dbNode fill:#673AB7,color:white,stroke:#311B92,stroke-width:2px,rounded\r\n    classDef utilNode fill:#009688,color:white,stroke:#00695C,stroke-width:2px,rounded\r\n    classDef scriptNode fill:#795548,color:white,stroke:#3E2723,stroke-width:2px,rounded\r\n    classDef module fill:#FFECB3,stroke:#FFA000,stroke-width:1px,rounded,color:black\r\n    \r\n    %% Style for subgraphs\r\n    classDef sectionStyle fill:#F5F5F5,stroke:#BDBDBD,stroke-width:3px,color:#212121,stroke-dasharray:5 5\r\n    \r\n    %% Entry section\r\n    subgraph Entry["\ud83d\ude80 Entry Layer"]\r\n        direction TB\r\n        A[index.js] --\x3e|loads| B[environment.js]\r\n        A --\x3e|configures| C[Express Server]\r\n        C --\x3e|uses| D[package.json]\r\n    end\r\n    \r\n    %% Configuration section\r\n    subgraph Configuration["\u2699\ufe0f Configuration Layer"]\r\n        direction TB\r\n        E[config/] --\x3e F[express-app.config.js]\r\n        E --\x3e G[firebase.config.js]\r\n        E --\x3e H[winston.config.js]\r\n        E --\x3e I[tenant-aware-pgpool-manager.config.js]\r\n        E --\x3e J[prisma.config.js]\r\n    end\r\n    \r\n    %% Connect Entry to Configuration\r\n    C --\x3e|initializes| E\r\n    \r\n    %% Feature Modules section\r\n    subgraph FeatureModules["\ud83e\udde9 Feature Modules"]\r\n        direction TB\r\n        K[modules/] --\x3e L[auth/]\r\n        K --\x3e M[tenant/]\r\n        K --\x3e N[database*/]\r\n        K --\x3e O[userManagement/]\r\n        K --\x3e n1[databaseTable/]\r\n        \r\n        subgraph AuthModule["Auth Module"]\r\n            direction TB\r\n            L1[Controller/Service/Routes/Middleware]\r\n        end\r\n        \r\n        subgraph TenantModule["Tenant Module"]\r\n            direction TB\r\n            M1[Controller/Service/Routes/Middleware]\r\n        end\r\n        \r\n        subgraph DatabaseModule["Database Module"]\r\n            direction TB\r\n            N1[Controller/Service/Processor/Models]\r\n        end\r\n        \r\n        subgraph DbTableModule["Database Table Module"]\r\n            direction TB\r\n            n2[Controller/Service/Routes/Middleware]\r\n        end\r\n        \r\n        L --\x3e L1\r\n        M --\x3e M1\r\n        N --\x3e N1\r\n        n1 --\x3e n2\r\n    end\r\n    \r\n    %% Connect Entry to FeatureModules\r\n    C --\x3e|routes to| K\r\n    \r\n    %% Database Layer section\r\n    subgraph DatabaseLayer["\ud83d\udcbe Database Layer"]\r\n        direction TB\r\n        P[Prisma Client] --\x3e Q[(PostgreSQL)]\r\n        P --\x3e R[prisma/schema.prisma]\r\n        P --\x3e S[prisma/migrations/]\r\n        T[scripts/dev/] --\x3e|seeds| Q\r\n    end\r\n    \r\n    %% Connect Configuration to Database\r\n    J --\x3e P\r\n    \r\n    %% Utilities section\r\n    subgraph Utilities["\ud83d\udee0\ufe0f Utilities"]\r\n        direction TB\r\n        U[utils/] --\x3e V[logger.js]\r\n        U --\x3e W[error.util.js]\r\n        U --\x3e X[crypto.util.js]\r\n        U --\x3e Y[postgresql.util.js]\r\n        U --\x3e Z[time.util.js]\r\n    end\r\n    \r\n    %% Cross-module connections\r\n    L1 --\x3e P\r\n    M1 --\x3e P\r\n    N1 --\x3e Y\r\n    N1 --\x3e I\r\n    n2 --\x3e Y\r\n    n2 --\x3e I\r\n    O --\x3e P\r\n    I --\x3e|pool manager for each tenant| Q\r\n    \r\n    %% Apply styles\r\n    class A,B,C,D entryNode\r\n    class E,F,G,H,I,J configNode\r\n    class K,L,M,N,O,n1 featureNode\r\n    class L1,M1,N1,n2 module\r\n    class P,Q,R,S dbNode\r\n    class T scriptNode\r\n    class U,V,W,X,Y,Z utilNode\r\n    \r\n    %% Apply styles to subgraphs\r\n    class Entry,Configuration,FeatureModules,DatabaseLayer,Utilities,AuthModule,TenantModule,DatabaseModule,DbTableModule sectionStyle'}),"\n",(0,i.jsx)(n.h2,{id:"core-architecture-components",children:"Core Architecture Components"}),"\n",(0,i.jsx)(n.h3,{id:"application-entry-point",children:"Application Entry Point"}),"\n",(0,i.jsxs)(n.p,{children:["The application initializes through ",(0,i.jsx)(n.code,{children:"index.js"}),", which:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Loads environment variables"}),"\n",(0,i.jsx)(n.li,{children:"Configures the Express application"}),"\n",(0,i.jsx)(n.li,{children:"Sets up logging"}),"\n",(0,i.jsx)(n.li,{children:"Initializes Firebase connection"}),"\n",(0,i.jsx)(n.li,{children:"Starts the HTTP server"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configuration-layer",children:"Configuration Layer"}),"\n",(0,i.jsxs)(n.p,{children:["Located in the ",(0,i.jsx)(n.code,{children:"config"})," directory:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"express-app.config.js"}),": Configures the Express application, middleware, and routes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"firebase.config.js"}),": Initializes Firebase for authentication services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"prisma.config.js"}),": Sets up the Prisma client for database operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"tenant-aware-pgpool-manager.config.js"}),": Manages database connection pools for multi-tenant support"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"winston.config.js"}),": Configures the Winston logging service"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"middleware-layer",children:"Middleware Layer"}),"\n",(0,i.jsx)(n.p,{children:"Key middleware components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication Middleware"})," (",(0,i.jsx)(n.code,{children:"auth.middleware.js"}),"): Validates JWT tokens and Firebase authentication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tenant Middleware"})," (",(0,i.jsx)(n.code,{children:"tenant.middleware.js"}),"): Handles tenant context for multi-tenant operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database Middleware"})," (",(0,i.jsx)(n.code,{children:"database.middleware.js"}),"): Manages database connections and transactions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Handling"})," (",(0,i.jsx)(n.code,{children:"utils/error.util.js"}),"): Provides centralized error handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Logging"})," (",(0,i.jsx)(n.code,{children:"utils/logger.js"}),"): Implements application-wide logging"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"module-layer",children:"Module Layer"}),"\n",(0,i.jsxs)(n.p,{children:["The application's functionality is organized into modular components in the ",(0,i.jsx)(n.code,{children:"modules"})," directory:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Core Modules:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"auth"}),": Authentication and authorization mechanisms"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"tenant"}),": Multi-tenancy implementation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"tenantRole"}),": Role-based access control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"userManagement"}),": User operations and profile management"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Database Modules:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"database"}),": Core database operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"databaseChart"}),": Chart generation and visualization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"databaseDashboard"}),": Dashboard configuration and management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"databaseQuery"}),": Query execution and management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"databaseTable"}),": Table operations and schema management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"databaseTrigger"}),": Event-driven database triggers"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Module Structure:"}),"\r\nEach module follows a consistent structure:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Controller"})," (",(0,i.jsx)(n.code,{children:"*.controller.js"}),"): Handles HTTP requests and responses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Service"})," (",(0,i.jsx)(n.code,{children:"*.service.js"}),"): Contains business logic"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Routes"})," (",(0,i.jsx)(n.code,{children:"*.v1.routes.js"}),"): Defines API endpoints"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Middleware"})," (",(0,i.jsx)(n.code,{children:"*.middleware.js"}),"): Module-specific request processing"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-access-layer",children:"Data Access Layer"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prisma ORM"}),": Object-Relational Mapping for PostgreSQL (used by core, queries, chart, dashboard modules)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prisma/schema.prisma"}),": Database schema definition"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prisma/migrations"}),": Database migration files"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node PG"}),": Postgres SQL node client (used by database, databaseTable & databaseTrigger module)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"config/tenant-aware-pgpool-manager.config.js"}),": Manages database connections per tenant/schema.prisma"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"utils/postgresql.util.js"}),": Contains raw database queries used by pg client"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PostgreSQL"}),": Persistent data storage"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"utility-layer",children:"Utility Layer"}),"\n",(0,i.jsxs)(n.p,{children:["Located in the ",(0,i.jsx)(n.code,{children:"utils"})," directory:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Handling"})," (",(0,i.jsx)(n.code,{children:"error.util.js"}),"): Custom error classes and error handling functions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Logging"})," (",(0,i.jsx)(n.code,{children:"logger.js"}),"): Logging utility for application events"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"String Utilities"}),": Functions for string manipulation and validation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Date Utilities"}),": Date formatting and manipulation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security Utilities"}),": Encryption and hashing functions"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"scripts",children:"Scripts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database Seeding"})," (",(0,i.jsx)(n.code,{children:"scripts/seed.js"}),"): Initializes database with seed data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Development Tools"})," (",(0,i.jsx)(n.code,{children:"scripts/dev/"}),"): Utilities for development workflows","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Module generation templates"}),"\n",(0,i.jsx)(n.li,{children:"Test data generators"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"authentication-flow",children:"Authentication Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Client submits credentials to Firebase Authentication"}),"\n",(0,i.jsx)(n.li,{children:"Firebase returns JWT token to client"}),"\n",(0,i.jsx)(n.li,{children:"Client includes JWT in Authorization header for subsequent requests"}),"\n",(0,i.jsx)(n.li,{children:"Authentication middleware validates the token"}),"\n",(0,i.jsx)(n.li,{children:"Tenant middleware establishes tenant context"}),"\n",(0,i.jsx)(n.li,{children:"Role-based access control enforces permissions"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"request-processing-pipeline",children:"Request Processing Pipeline"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Request received by Express server"}),"\n",(0,i.jsxs)(n.li,{children:["Global middleware processes request:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Logging"}),"\n",(0,i.jsx)(n.li,{children:"CORS handling"}),"\n",(0,i.jsx)(n.li,{children:"Body parsing"}),"\n",(0,i.jsx)(n.li,{children:"Authentication"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Tenant middleware establishes tenant context"}),"\n",(0,i.jsxs)(n.li,{children:["Route-specific middleware applies:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Parameter validation"}),"\n",(0,i.jsx)(n.li,{children:"Resource-specific checks"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Controller processes the request"}),"\n",(0,i.jsx)(n.li,{children:"Service layer implements business logic"}),"\n",(0,i.jsx)(n.li,{children:"Prisma client interacts with PostgreSQL database"}),"\n",(0,i.jsx)(n.li,{children:"Response flows back through the layers"}),"\n",(0,i.jsx)(n.li,{children:"Error handling middleware catches exceptions"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"multi-tenancy-architecture",children:"Multi-tenancy Architecture"}),"\n",(0,i.jsx)(n.p,{children:"The system implements a multi-tenant architecture with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tenant Isolation"}),": Each tenant's data is logically separated"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tenant-Aware Connection Pooling"}),": Optimized database connections per tenant"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Role-Based Access Control"}),": Permissions scoped to tenant contexts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tenant Middleware"}),": Automatically applies tenant context to requests"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"error-handling-strategy",children:"Error Handling Strategy"}),"\n",(0,i.jsx)(n.p,{children:"The application implements a hierarchical error handling approach:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Custom Error Classes"}),": Extend standard Error for specific scenarios"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Service-Level Error Handling"}),": Business logic validation and error generation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Controller-Level Error Handling"}),": HTTP-specific error handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Global Error Middleware"}),": Catches unhandled errors"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structured Error Responses"}),": Consistent error format for API clients"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"logging-architecture",children:"Logging Architecture"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Winston Logger"}),": Configured for different environments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Log Levels"}),": Debug, Info, Warning, Error"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Log Destinations"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Console (development)"}),"\n",(0,i.jsx)(n.li,{children:"Files (rotation based on size and retention policy)"}),"\n",(0,i.jsx)(n.li,{children:"Syslog (production)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Context Enrichment"}),": Adds request ID, tenant ID, and user information to logs"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"security-architecture",children:"Security Architecture"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication"}),": Firebase and JWT-based"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authorization"}),": Role-based access control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Validation"}),": Input validation at controller level"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CORS Protection"}),": Whitelist-based approach"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rate Limiting"}),": Prevents abuse"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environment Isolation"}),": Configuration-based security settings"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var i=r(6540);const s={},t=i.createContext(s);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);