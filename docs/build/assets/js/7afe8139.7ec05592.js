"use strict";(self.webpackChunkjet_docs=self.webpackChunkjet_docs||[]).push([[9861],{7025:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=s(4848),i=s(8453);const a={},t="Authorization System Documentation",l={id:"auth/authorization",title:"Authorization System Documentation",description:"Table of Contents",source:"@site/docs/auth/authorization.md",sourceDirName:"auth",slug:"/auth/authorization",permalink:"/jet-admin/docs/auth/authorization",draft:!1,unlisted:!1,editUrl:"https://github.com/jet-labs/jet-admin/tree/main/docs/auth/authorization.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Authentication System Documentation",permalink:"/jet-admin/docs/auth/authentication"},next:{title:"Logging",permalink:"/jet-admin/docs/logging"}},o={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"System Overview <a></a>",id:"system-overview-",level:2},{value:"Core Components <a></a>",id:"core-components-",level:2},{value:"Permissions <a></a>",id:"permissions-",level:3},{value:"Roles <a></a>",id:"roles-",level:3},{value:"Database Schema <a></a>",id:"database-schema-",level:3},{value:"Authorization Process <a></a>",id:"authorization-process-",level:2},{value:"Workflow Diagram <a></a>",id:"workflow-diagram-",level:3},{value:"Implementation Details <a></a>",id:"implementation-details-",level:3},{value:"Usage Examples <a></a>",id:"usage-examples-",level:2},{value:"Special Cases <a></a>",id:"special-cases-",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"authorization-system-documentation",children:"Authorization System Documentation"}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#authorization-system-documentation",children:"Authorization System Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#system-overview-",children:"System Overview "})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#core-components-",children:"Core Components "}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#permissions-",children:"Permissions "})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#roles-",children:"Roles "})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#database-schema-",children:"Database Schema "})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#authorization-process-",children:"Authorization Process "}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#workflow-diagram-",children:"Workflow Diagram "})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details-",children:"Implementation Details "})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#usage-examples-",children:"Usage Examples "})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#special-cases-",children:"Special Cases "})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"system-overview-",children:["System Overview ",(0,r.jsx)("a",{name:"system-overview"})]}),"\n",(0,r.jsx)(n.mermaid,{value:"%%{init: {'theme':'neutral'}}%%\r\ngraph TD\r\n    subgraph ER Diagram\r\n        Users[tblUsers] --\x3e|1:M| UsersTenantsRelationship[tblUsersTenantsRelationship]\r\n        Tenants[tblTenants] --\x3e|1:M| UsersTenantsRelationship\r\n        UsersTenantsRelationship --\x3e|M:M| UserTenantRoleMappings[tblUserTenantRoleMappings]\r\n        UserTenantRoleMappings --\x3e Roles[tblRoles]\r\n        Roles --\x3e|M:M| RolePermissionMappings[tblRolePermissionMappings]\r\n        RolePermissionMappings --\x3e Permissions[tblPermissions]\r\n    end"}),"\n",(0,r.jsx)(n.p,{children:"Our authorization system implements a granular, role-based access control (RBAC) model with tenant isolation. Key features include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-tenant architecture with tenant-specific permissions"}),"\n",(0,r.jsx)(n.li,{children:"Hierarchical permission structure"}),"\n",(0,r.jsx)(n.li,{children:"Global and tenant-scoped roles"}),"\n",(0,r.jsx)(n.li,{children:"Admin override capabilities"}),"\n",(0,r.jsx)(n.li,{children:"Wildcard permission matching"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"core-components-",children:["Core Components ",(0,r.jsx)("a",{name:"core-components"})]}),"\n",(0,r.jsxs)(n.h3,{id:"permissions-",children:["Permissions ",(0,r.jsx)("a",{name:"permissions"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Standard format\r\n"scope:resource:action"\r\n\r\n// Examples\r\n"tenant:database:table:create"\r\n"tenant:role:manage"\r\n"user:read"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Types:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Global Permissions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"tenant:create"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"user:read"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Tenant-Specific Permissions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"tenant:database:table:create"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"tenant:role:manage"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Hierarchy:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"tenant\r\n  \u251c\u2500\u2500 role\r\n  \u2502   \u251c\u2500\u2500 create\r\n  \u2502   \u251c\u2500\u2500 read\r\n  \u2502   \u2514\u2500\u2500 update\r\n  \u251c\u2500\u2500 database\r\n  \u2502   \u251c\u2500\u2500 table\r\n  \u2502   \u2514\u2500\u2500 query\r\n  \u2514\u2500\u2500 member\r\n      \u251c\u2500\u2500 add\r\n      \u2514\u2500\u2500 remove\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"roles-",children:["Roles ",(0,r.jsx)("a",{name:"roles"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Types:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Global Roles (tenantID=null)"}),(0,r.jsx)(n.th,{children:"Tenant-Specific Roles"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DATABASE_DEVELOPER"}),(0,r.jsx)(n.td,{children:"Custom roles defined per tenant"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DATA_ANALYST"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"QUERY_MANAGER"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SUPPORT_AGENT"}),(0,r.jsx)(n.td,{})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Role-Permission Mapping:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- DATABASE_DEVELOPER\r\n'metadata:read', 'schema:create', 'table:create'\r\n\r\n-- DATA_ANALYST \r\n'metadata:read', 'table:read', 'stats:read'\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"database-schema-",children:["Database Schema ",(0,r.jsx)("a",{name:"database-schema"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-prisma",children:"model tblPermissions {\r\n  permissionID              Int\r\n  permissionName            String\r\n  permissionDescription     String?\r\n}\r\n\r\nmodel tblRoles {\r\n  roleID                    Int\r\n  roleName                  String\r\n  tenantID                  Int?\r\n}\r\n\r\nmodel tblRolePermissionMappings {\r\n  roleID       Int\r\n  permissionID Int\r\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"authorization-process-",children:["Authorization Process ",(0,r.jsx)("a",{name:"authorization-process"})]}),"\n",(0,r.jsxs)(n.h3,{id:"workflow-diagram-",children:["Workflow Diagram ",(0,r.jsx)("a",{name:"workflow-diagram"})]}),"\n",(0,r.jsx)(n.mermaid,{value:"%%{init: {'theme':'neutral'}}%%\r\ngraph TD\r\n    A[API Request] --\x3e B{User/Tenant Valid?}\r\n    B --\x3e|Yes| C{User has Admin Role?}\r\n    B --\x3e|No| D[Access Denied]\r\n    C --\x3e|Yes| E[Immediate Access]\r\n    C --\x3e|No| F[Check Permissions]\r\n    F --\x3e G{Has Required\\nPermissions?}\r\n    G --\x3e|Yes| E\r\n    G --\x3e|No| D"}),"\n",(0,r.jsxs)(n.h3,{id:"implementation-details-",children:["Implementation Details ",(0,r.jsx)("a",{name:"implementation-details"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Authentication Middleware"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"authMiddleware.authProvider = async function (req, res, next) {\r\n  // Firebase token verification\r\n  const decodedIdToken = await firebaseApp.auth().verifyIdToken(idToken);\r\n  req.user = await authService.getUserFromFirebaseID(decodedIdToken.uid);\r\n  next();\r\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Permission Check Middleware"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"authMiddleware.checkUserPermissions = (requiredPermissions, options) => {\r\n  return async (req, res, next) => {\r\n    const permissionCheck = await authService.checkUserPermissions({\r\n      userID: user.userID,\r\n      tenantID: parseInt(tenantID),\r\n      requiredPermissions,\r\n    });\r\n    \r\n    permissionCheck.permission ? next() : res.sendStatus(403);\r\n  };\r\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Permission Verification Service"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'authService.checkUserPermissions = async ({ userID, tenantID }) => {\r\n  if (userTenant?.role === "ADMIN") return { permission: true };\r\n  \r\n  const roleMappings = await fetchUserRolesAndPermissions(userID, tenantID);\r\n  return checkPermissions(extractUserPermissions(roleMappings));\r\n};\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"usage-examples-",children:["Usage Examples ",(0,r.jsx)("a",{name:"usage-examples"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Route Protection"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Single permission check\r\nrouter.post("/tables",\r\n  authMiddleware.checkUserPermissions(["tenant:database:table:create"]),\r\n  controller.createTable\r\n);\r\n\r\n// Multiple permissions (ALL)\r\nrouter.post("/complex-op",\r\n  authMiddleware.checkUserPermissions(["perm1", "perm2"], { requireAll: true }),\r\n  controller.complexOp\r\n);\r\n\r\n// Multiple permissions (ANY)\r\nrouter.get("/reports",\r\n  authMiddleware.checkUserPermissions(["perm3", "perm4"], { requireAll: false }),\r\n  controller.getReports\r\n);\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"special-cases-",children:["Special Cases ",(0,r.jsx)("a",{name:"special-cases"})]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Admin Privileges"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bypass all permission checks"}),"\n",(0,r.jsxs)(n.li,{children:["Managed through ",(0,r.jsx)(n.code,{children:"tblUsersTenantsRelationship.role"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Wildcard Support"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant:database:*"})," matches all database permissions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant:*:create"})," matches create actions in any tenant resource"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Tenant Isolation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Permissions only valid within assigned tenant context"}),"\n",(0,r.jsx)(n.li,{children:"Global permissions apply across all tenants"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Role Management"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Requires ",(0,r.jsx)(n.code,{children:"tenant:role:manage"})," permission"]}),"\n",(0,r.jsx)(n.li,{children:"Only tenant admins can modify role assignments"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(6540);const i={},a=r.createContext(i);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);